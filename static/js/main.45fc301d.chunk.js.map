{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions/userActions.js","redux/operation.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","App.js","reportWebVitals.js","redux/reducers/filterReducer.js","redux/reducers/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","filterContacts","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","addContacts","contact","post","deleteContacts","contactId","delete","getContacts","state","contacts","items","filterContact","filter","filteredContacts","createSelector","name","toLowerCase","includes","toLocaleLowerCase","getLoading","loader","ContactForm","number","handleContactInfo","e","currentTarget","value","setState","reset","submitForm","preventDefault","newContact","props","some","el","alert","addContact","this","className","s","form","onSubmit","htmlFor","label","placeholder","formInput","onChange","pattern","title","required","type","formButton","Component","mapDispatchToProps","operation","connect","Filter","handleFilter","filterAct","filterLabel","filterInput","ContactList","onClickDelete","id","deleteCont","fetchCont","filteredCont","isLoading","contaktList","map","contaktListItem","contaktListName","contaktListButton","onClick","propTypes","filteredNames","PropTypes","array","deleteItem","func","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","filterReducer","createReducer","_","payload","contactsReducer","contactsReducers","combineReducers","reducers","error","rootReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,MAAQ,6B,mBCAtGD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,kBAAoB,yC,mBCA5ID,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,mPC4C7DC,EAAuBC,YAClC,iCAEWC,EAAuBD,YAClC,iCAEWE,EAAqBF,YAAa,+BAElCG,EAAqBH,YAAa,+BAClCI,EAAqBJ,YAAa,+BAClCK,EAAmBL,YAAa,6BAEhCM,EAAwBN,YACnC,kCAEWO,EAAwBP,YACnC,kCAEWQ,EAAsBR,YAAa,gCAEnCS,EAAiBT,YAAa,mBCpD3CU,IAAMC,SAASC,QAAU,wBAEzB,IAiCe,GACbC,cAlCoB,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,6DAC1BD,EAASf,KADiB,kBAIDW,IAAMM,IAAI,aAJT,gBAIhBC,EAJgB,EAIhBA,KACRH,EAASb,EAAqBgB,IALN,gDAOxBH,EAASZ,EAAmB,EAAD,KAPH,yDAAN,uDAmCpBgB,YAxBkB,SAAAC,GAAO,8CAAI,WAAML,GAAN,iBAAAC,EAAA,6DAC7BD,EAASX,KADoB,kBAIJO,IAAMU,KAAK,YAAaD,GAJpB,gBAInBF,EAJmB,EAInBA,KACRH,EAASV,EAAmBa,IALD,gDAO3BH,EAAST,EAAiB,EAAD,KAPE,yDAAJ,uDAyBzBgB,eAdqB,SAAAC,GAAS,8CAAI,WAAMR,GAAN,SAAAC,EAAA,6DAClCD,EAASR,KADyB,kBAI1BI,IAAMa,OAAN,oBAA0BD,IAJA,OAKhCR,EAASP,EAAsBe,IALC,gDAOhCR,EAASN,EAAoB,EAAD,KAPI,yDAAJ,wD,QCnCnBgB,EAAc,SAACC,GAC1B,OAAOA,EAAMC,SAASC,OAEXC,EAAgB,SAACH,GAC5B,OAAOA,EAAMC,SAASG,QAGXC,EAAmBC,YAC9B,CAACP,EAAaI,IACd,SAACD,EAAOE,GAAR,OACEF,EAAME,QAAO,qBAAGG,KACTC,cAAcC,SAASL,EAAOM,2BAI5BC,EAAa,SAACX,GAAD,OAAWA,EAAMC,SAASW,Q,OCV9CC,E,4MACJb,MAAQ,CACNO,KAAM,GACNO,OAAQ,I,EAGVC,kBAAoB,SAACC,GAAO,IAAD,EACDA,EAAEC,cAAlBV,EADiB,EACjBA,KAAMW,EADW,EACXA,MACd,EAAKC,SAAL,eAAiBZ,EAAOW,K,EAG1BE,MAAQ,WACN,EAAKD,SAAS,CAAEZ,KAAM,GAAIO,OAAQ,M,EAGpCO,WAAa,SAACL,GACZA,EAAEM,iBADgB,MAEO,EAAKtB,MACxBuB,EAAa,CAAEhB,KAHH,EAEVA,KACmBO,OAHT,EAEJA,QAIZ,EAAKU,MAAMvB,SAASwB,MAClB,SAACC,GAAD,OAAQA,EAAGnB,KAAKC,gBAAkBe,EAAWhB,KAAKC,iBAGpDmB,MAAM,GAAD,OAAIJ,EAAWhB,KAAf,6BAGP,EAAKiB,MAAMI,WAAWL,GAEtB,EAAKH,U,4CAGP,WAAU,IAAD,IACkBS,KAAK7B,MAAtBO,EADD,EACCA,KAAMO,EADP,EACOA,OACd,OACE,uBAAMgB,UAAWC,IAAEC,KAAMC,SAAUJ,KAAKR,WAAxC,UACE,wBAAOa,QAAQ,OAAOJ,UAAWC,IAAEI,MAAnC,iBAEE,uBACEC,YAAY,cACZN,UAAWC,IAAEM,UACbC,SAAUT,KAAKd,kBACfwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRlC,KAAK,OACLW,MAAOX,EACPmC,KAAK,YAGT,wBAAOZ,UAAWC,IAAEI,MAApB,mBAEE,0BACEC,YAAY,cACZK,UAAQ,EACRH,SAAUT,KAAKd,kBACfwB,QAAQ,+FACRC,MAAM,olBALR,mDAOS1B,GAPT,wBAQU,UARV,0BASaiB,IAAEM,WATf,qBAUO,UAVP,qBAWO,OAXP,OAcF,wBAAQP,UAAWC,IAAEY,WAAYD,KAAK,SAAtC,gC,GAnEkBE,aA6EpBC,EAAqB,CACzBjB,WAAYkB,EAAUrD,aAOTsD,eAXS,SAAC/C,GAAD,MAAY,CAClCC,SAAUF,EAAYC,MAUgB6C,EAAzBE,CAA6ClC,G,iBCrFtDmC,E,4MACJC,aAAe,SAACjC,GACd,EAAKQ,MAAM0B,UAAUlC,EAAEC,cAAcC,Q,4CAGvC,WACE,OACE,wBAAOY,UAAWC,IAAEoB,YAApB,kCAEE,uBACErB,UAAWC,IAAEqB,YACb7C,KAAK,SACLW,MAAOW,KAAKL,MAAMpB,OAClBkC,SAAUT,KAAKoB,aACfP,KAAK,gB,GAdME,aAyBfC,EAAqB,CACzBK,UAAWlE,GAQE+D,eAbS,SAAC/C,GAAD,MAAY,CAElCI,OAAQD,EAAcH,MAWgB6C,EAAzBE,CAA6CC,G,iBCD7CK,E,4MAjCbC,cAAgB,SAACC,GACf,EAAK/B,MAAMgC,WAAWD,I,uDAJxB,WACE1B,KAAKL,MAAMiC,c,oBAMb,WAAU,IAAD,SAC6B5B,KAAKL,MAAjCkC,EADD,EACCA,aAAcC,EADf,EACeA,UAEtB,OACE,qCACGA,GAAa,2FAEZ,oBAAI7B,UAAWC,IAAE6B,YAAjB,SACGF,EAAaG,KAAI,SAACnC,GAAD,OAChB,qBAAII,UAAWC,IAAE+B,gBAAjB,UACE,oBAAGhC,UAAWC,IAAEgC,gBAAhB,UACGrC,EAAGnB,KADN,MACemB,EAAGZ,UAElB,wBACEgB,UAAWC,IAAEiC,kBACbtB,KAAK,SACLuB,QAAS,kBAAM,EAAKX,cAAc5B,EAAG6B,KAHvC,sBAJqC7B,EAAG6B,gB,GAjB9BX,a,iBCiB1BS,EAAYa,UAAY,CACtBC,cAAeC,IAAUC,MACzBC,WAAYF,IAAUG,MAETxB,I,IAAAA,eAbS,SAAC/C,GAAD,MAAY,CAClC0D,aAAcrD,EAAiBL,GAC/B2D,UAAUhD,EAAWX,OAGI,SAACX,GAAD,MAAe,CACxCmE,WAAY,SAACD,GAAD,OAAQlE,EAASyD,EAAUlD,eAAe2D,KACtDE,UAAW,kBAAMpE,EAASyD,EAAU1D,qBAMvB2D,CAA6CM,GCD7CmB,G,4JAhBb,WACE,OACE,sBAAK1C,UAAU,MAAf,UACE,2CAEA,cAAC,EAAD,IACA,gCACE,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,c,GAVQc,aCMH6B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iBCgBCQ,GAJKC,YAAc,GAAD,eAC9BnG,GAAiB,SAACoG,EAAD,YAAIC,YCiDT,IAACC,gBAxBSH,YAAc,IAAD,mBACnC3G,GAAsB,SAAC4G,EAAD,YAAMC,WADO,cAEnC1G,GAAqB,SAACqB,EAAD,OAAUqF,EAAV,EAAUA,QAAV,6BAA4BrF,GAA5B,CAAmCqF,OAFrB,cAGnCvG,GAAwB,SAACkB,EAAD,GAAyB,IAAfqF,EAAc,EAAdA,QACjC,OAAOrF,EAAMI,QAAO,SAACsB,GAAD,OAAQA,EAAG6B,KAAO8B,QAJJ,IAwBLzE,OAhBlBuE,aAAc,GAAD,mBACzB7G,GAAsB,kBAAI,KADD,cAEzBE,GAAsB,kBAAI,KAFD,cAGzBC,GAAoB,kBAAI,KAHC,cAIzBC,GAAoB,kBAAI,KAJC,cAKzBC,GAAoB,kBAAI,KALC,cAMzBC,GAAkB,kBAAI,KANG,cAOzBC,GAAuB,kBAAI,KAPF,cAQzBC,GAAuB,kBAAI,KARF,cASzBC,GAAqB,kBAAI,KATA,K,6BCRtBwG,GAAmBC,aAAgB,CACvCtF,MAAOuF,GAASH,gBAChBlF,OAAQ8E,GACRtE,OAAQ6E,GAAS7E,OACjB8E,MAAOD,GAASC,QAGZC,GAAcH,aAAgB,CAClCvF,SAAUsF,KAGNK,GAAU,uBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAWa,IAAEC,MARHC,YAAe,CAC3BC,QAASd,GACTC,iB,MC1DFc,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAMA,MAAvB,SAEA,cAAC,IAAMK,WAAP,UACE,cAAC,GAAD,QAIFC,SAASC,eAAe,SAM1BrC,O","file":"static/js/main.45fc301d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2StCx\",\"formInput\":\"ContactForm_formInput__u0Gj8\",\"label\":\"ContactForm_label__2BF_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contaktList\":\"ContactList_contaktList__1G7pi\",\"contaktListItem\":\"ContactList_contaktListItem__1F1Q6\",\"contaktListButton\":\"ContactList_contaktListButton__3kFVj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2Jnad\",\"filterLabel\":\"Filter_filterLabel__3uRui\"};","// import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// ===========Redux===============\r\n// const addContact=(contactObj)=>{\r\n//     return{\r\n//         type:add,\r\n//         payload:{\r\n//             id:  uuidv4(),\r\n//             name:contactObj.name,\r\n//             number:contactObj.number,\r\n//         }\r\n//     }\r\n// }\r\n\r\n// const deleteContact=(id)=>{\r\n//     return{\r\n//         type:deleteUsers,\r\n//         payload:id\r\n//     }\r\n// }\r\n\r\n// const filterContacts=(value)=>{\r\n//     return{\r\n//         type:filter,\r\n//         payload:value,\r\n//     }\r\n\r\n// }\r\n// ===========Redux Toolkit===============\r\n//  const addContact = createAction(\"ADD_CONTACT\", ({ id, name, number }) => {\r\n//   return {\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       name: name,\r\n//       number: number,\r\n//     },\r\n//   };\r\n// });\r\n\r\n// const deleteContact = createAction(\"DELETE_CONTACT\");\r\n// const filterContacts = createAction(\"FILTER_CONTACTS\");\r\n\r\n// export default { addContact, deleteContact, filterContacts };\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\r\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\r\nexport const addContactsError = createAction(\"contacts/addContactsError\");\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  \"contacts/deleteContactsRequest\"\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  \"contacts/deleteContactsSuccess\"\r\n);\r\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\n\r\nexport const filterContacts = createAction(\"contacts/filter\");\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from \"./actions/userActions.js\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContacts = contact => async dispatch => {\r\n  dispatch(addContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error));\r\n  }\r\n};\r\n\r\nconst deleteContacts = contactId => async dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error));\r\n  }\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => {\r\n  return state.contacts.items;\r\n};\r\nexport const filterContact = (state) => {\r\n  return state.contacts.filter;\r\n};\r\n\r\nexport const filteredContacts = createSelector(\r\n  [getContacts, filterContact],\r\n  (items, filter) =>\r\n    items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLocaleLowerCase())\r\n    )\r\n);\r\n\r\nexport const getLoading = (state) => state.contacts.loader;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport operation from \"../../redux/operation\";\r\nimport { getContacts } from \"../../redux/selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleContactInfo = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newContact = { name, number };\r\n\r\n    if (\r\n      this.props.contacts.some(\r\n        (el) => el.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.props.addContact(newContact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.submitForm}>\r\n        <label htmlFor=\"name\" className={s.label}>\r\n          Name\r\n          <input\r\n            placeholder=\"Ivan Ivanov\"\r\n            className={s.formInput}\r\n            onChange={this.handleContactInfo}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            placeholder=\"09755555555\"\r\n            required\r\n            onChange={this.handleContactInfo}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            htmlFor=\"number\"\r\n            className={s.formInput}\r\n            name=\"number\"\r\n            type=\"tel\"\r\n          />\r\n        </label>\r\n        <button className={s.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  addContact: operation.addContacts,\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterContacts } from \"../../redux/actions/userActions\";\r\nimport { filterContact} from '../../redux/selectors'\r\n\r\nclass Filter extends Component {\r\n  handleFilter = (e) => {\r\n    this.props.filterAct(e.currentTarget.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filterInput}\r\n          name=\"filter\"\r\n          value={this.props.filter}\r\n          onChange={this.handleFilter}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n  filter: filterContact(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  filterAct: filterContacts,\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  search: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchCont();\r\n  }\r\n  onClickDelete = (id) => {\r\n    this.props.deleteCont(id);\r\n  };\r\n\r\n  render() {\r\n    const { filteredCont, isLoading } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {isLoading && <h2>Загружаем...</h2>}\r\n        {\r\n          <ul className={s.contaktList}>\r\n            {filteredCont.map((el) => (\r\n              <li className={s.contaktListItem} key={el.id}>\r\n                <p className={s.contaktListName}>\r\n                  {el.name} : {el.number}\r\n                </p>\r\n                <button\r\n                  className={s.contaktListButton}\r\n                  type=\"button\"\r\n                  onClick={() => this.onClickDelete(el.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport operation from \"../../redux/operation\";\r\nimport ContactList from \"./ContactList\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  filteredContacts,\r\n  \r\n  getLoading\r\n\r\n} from \"../../redux/selectors\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filteredCont: filteredContacts(state),\r\n  isLoading:getLoading(state),\r\n  \r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteCont: (id) => dispatch(operation.deleteContacts(id)),\r\n  fetchCont: () => dispatch(operation.fetchContacts()),\r\n});\r\nContactList.propTypes = {\r\n  filteredNames: PropTypes.array,\r\n  deleteItem: PropTypes.func,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm />\r\n        <div>\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createReducer} from \"@reduxjs/toolkit\"\r\nimport { filterContacts}from \"../actions/userActions\"\r\n\r\n// ===========Redux===============\r\n// const { filter } = types;\r\n\r\n// const filterReducer = (state = \"\", action) => {\r\n//   const { type, payload } = action;\r\n//   switch (type) {\r\n//     case filter:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\n\r\n// ===========Redux Toolkit===============\r\n\r\nconst filterReducer=createReducer('',{\r\n  [filterContacts]:((_,{payload})=> payload)\r\n})\r\n\r\nexport default filterReducer","// import types from \"../actions/actionsTypes\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n \r\n} from \"../actions/userActions\";\r\n\r\n\r\n// ===========Redux===============\r\n// const { add, deleteUsers } = types;\r\n\r\n// const contacts = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\n// const contactsReducer = (state = contacts, action) => {\r\n//   const { type, payload } = action;\r\n//   switch (type) {\r\n//     case add:\r\n//       return [...state, payload];\r\n//     case deleteUsers:\r\n//       return state.filter((el) => el.id !== payload);\r\n//       default:\r\n//         return state\r\n//   }\r\n// };\r\n\r\n// ===========Redux Toolkit===============\r\n// const state = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\nconst contactsReducer =  createReducer([], {\r\n  [fetchContactsSuccess]:(_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) => {\r\n    return state.filter((el) => el.id !== payload);\r\n  },\r\n});\r\n\r\nconst loader = createReducer(false,{\r\n  [fetchContactsRequest]:()=>true,\r\n  [fetchContactsSuccess]:()=>false,\r\n  [fetchContactsError]:()=>false,\r\n [ addContactsRequest]:()=>true,\r\n [ addContactsSuccess]:()=>false,\r\n [ addContactsError]:()=>false,\r\n  [deleteContactsRequest]:()=>true,\r\n [ deleteContactsSuccess]:()=>false,\r\n [ deleteContactsError]:()=>false,\r\n\r\n\r\n})\r\n\r\n\r\n\r\nexport default {contactsReducer, loader};\r\n","// ===========Redux===============\r\n// import { createStore, combineReducers } from \"redux\";\r\n// import filterReducer from \"./reducers/filterReducer\";\r\n// import contactsReducer from \"./reducers/contactsReducer\";\r\n\r\n// const contactsReducers=combineReducers({\r\n//     items: contactsReducer,\r\n//     filter: filterReducer,\r\n// })\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts:contactsReducers\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n// ===========Redux Toolkit===============\r\nimport {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport filterReducer from \"./reducers/filterReducer\";\r\nimport reducers from \"./reducers/contactsReducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const contactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst contactsReducers = combineReducers({\r\n  items: reducers.contactsReducer,\r\n  filter: filterReducer,\r\n  loader: reducers.loader,\r\n  error: reducers.error,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducers,\r\n});\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  // devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default { store };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n     {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  {/* </PersistGate> */}\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}